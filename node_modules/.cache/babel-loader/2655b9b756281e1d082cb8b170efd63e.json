{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass clientService {\n  ClientAdd(name, contact_person, mobile_no, email_id, address, location, pincode, warranty, site_name, site_location) {\n    const insertData = new FormData();\n    insertData.set('name', name);\n    insertData.set('contact_person', contact_person);\n    insertData.set('mobile_no', mobile_no);\n    insertData.set('email_id', email_id);\n    insertData.set('address', address);\n    insertData.set('location', location);\n    insertData.set('pincode', pincode);\n    insertData.set('warranty', warranty);\n\n    if (site_name && typeof site_name !== \"undefined\" && site_name.length > 0) {\n      for (var p = 0; p < site_name.length; p++) {\n        insertData.append('site_name', site_name[p]);\n      }\n    }\n\n    if (site_location && typeof site_location !== \"undefined\" && site_location.length > 0) {\n      for (var p = 0; p < site_location.length; p++) {\n        insertData.append('site_location', site_location[p]);\n      }\n    }\n\n    return axios.post(API_URL + \"client/client_reg/add\", insertData).then(response => {\n      return response.data;\n    });\n  }\n\n  ClientList() {\n    return axios.get(API_URL + \"admin/customer/list\", {\n      headers: authHeader()\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  ClientInfo(client_id) {\n    return axios.post(API_URL + \"client/client_reg/getinfo\", {\n      client_id\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  ClientUpdate(client_id, name, contact_person, mobile_no, email_id, address, location, pincode, site_name, site_location) {\n    const updateData = new FormData();\n    updateData.set('client_id', client_id);\n    updateData.set('name', name);\n    updateData.set('contact_person', contact_person);\n    updateData.set('mobile_no', mobile_no);\n    updateData.set('email_id', email_id);\n    updateData.set('address', address);\n    updateData.set('location', location);\n    updateData.set('pincode', pincode);\n\n    if (site_name && typeof site_name !== \"undefined\" && site_name.length > 0) {\n      for (var p = 0; p < site_name.length; p++) {\n        updateData.append('site_name', site_name[p]);\n      }\n    }\n\n    if (site_location && typeof site_location !== \"undefined\" && site_location.length > 0) {\n      for (var p = 0; p < site_location.length; p++) {\n        updateData.append('site_location', site_location[p]);\n      }\n    }\n\n    return axios.post(API_URL + \"client/client_reg/update\", updateData).then(response => {\n      return response.data;\n    });\n  }\n\n  ClientDelete(client_id) {\n    return axios.post(API_URL + \"/admin/customer/delete\", {\n      client_id\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n}\n\nexport default new clientService();","map":{"version":3,"sources":["G:/harrjNew/src/services/adminClient.service.js"],"names":["axios","authHeader","API_URL","process","env","REACT_APP_API_URL","clientService","ClientAdd","name","contact_person","mobile_no","email_id","address","location","pincode","warranty","site_name","site_location","insertData","FormData","set","length","p","append","post","then","response","data","ClientList","get","headers","ClientInfo","client_id","ClientUpdate","updateData","ClientDelete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass clientService {\n  ClientAdd(name, contact_person, mobile_no, email_id, address, location, pincode,warranty,site_name,site_location) {\n    const insertData = new FormData();\n    insertData.set('name', name);\n    insertData.set('contact_person', contact_person);\n    insertData.set('mobile_no', mobile_no);\n    insertData.set('email_id', email_id);\n    insertData.set('address', address);\n    insertData.set('location', location);\n    insertData.set('pincode', pincode);\n    insertData.set('warranty', warranty);\n\n\n    if(site_name && typeof site_name !==\"undefined\" && site_name.length>0){\n      for (var p = 0; p < site_name.length; p++) {\n        insertData.append('site_name', site_name[p]);\n      }\n    }\n\n    if(site_location && typeof site_location !==\"undefined\" && site_location.length>0){\n      for (var p = 0; p < site_location.length; p++) {\n        insertData.append('site_location', site_location[p]);\n      }\n    }\n\n    return axios\n      .post(API_URL + \"client/client_reg/add\", insertData )\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  ClientList() {\n    \n    return axios\n      .get(API_URL + \"admin/customer/list\", { headers: authHeader() })\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  ClientInfo(client_id) {\n    return axios\n      .post(API_URL + \"client/client_reg/getinfo\", { client_id })\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  ClientUpdate(client_id, name, contact_person, mobile_no, email_id, address, location, pincode,site_name,site_location) {\n    const updateData = new FormData();\n    updateData.set('client_id', client_id);\n    updateData.set('name', name);\n    updateData.set('contact_person', contact_person);\n    updateData.set('mobile_no', mobile_no);\n    updateData.set('email_id', email_id);\n    updateData.set('address', address);\n    updateData.set('location', location);\n    updateData.set('pincode', pincode);\n\n    if(site_name && typeof site_name !==\"undefined\" && site_name.length>0){\n      for (var p = 0; p < site_name.length; p++) {\n        updateData.append('site_name', site_name[p]);\n      }\n    }\n\n    if(site_location && typeof site_location !==\"undefined\" && site_location.length>0){\n      for (var p = 0; p < site_location.length; p++) {\n        updateData.append('site_location', site_location[p]);\n      }\n    }\n    \n    return axios\n      .post(API_URL + \"client/client_reg/update\", updateData )\n      .then((response) => {\n        return response.data;\n      });\n  }\n  \n  ClientDelete(client_id) {\n   \n    return axios\n      .post(API_URL + \"/admin/customer/delete\", { client_id })\n      .then((response) => {\n        return response.data;\n      });\n  }\n}\n\nexport default new clientService();"]},"metadata":{},"sourceType":"module"}