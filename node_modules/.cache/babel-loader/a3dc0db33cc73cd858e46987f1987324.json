{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass modelService {\n  ModelAdd(category_id, brand_id, model_name, model_desc) {\n    const insertData = new FormData();\n    insertData.set('category_id', category_id);\n    insertData.set('sub_category_id', sub_category_id);\n    insertData.set('brand_id', brand_id);\n    insertData.set('model_name', model_name);\n    insertData.set('model_desc', model_desc);\n    return axios.post(API_URL + \"admin/model/add\", insertData).then(response => {\n      return response.data;\n    });\n  }\n\n  ModelList() {\n    return axios.get(API_URL + \"admin/model/list\").then(response => {\n      return response.data;\n    });\n  }\n\n  ModelInfo(model_id) {\n    return axios.post(API_URL + \"admin/model/getinfo\", {\n      model_id\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  ModelUpdate(model_id, category_id, brand_id, model_name, model_desc) {\n    const updateData = new FormData();\n    updateData.set('model_id', model_id);\n    updateData.set('category_id', category_id);\n    updateData.set('brand_id', brand_id);\n    updateData.set('model_name', model_name);\n    updateData.set('model_desc', model_desc);\n    return axios.post(API_URL + \"admin/model/update\", updateData).then(response => {\n      return response.data;\n    });\n  }\n\n  ModelDelete(model_id) {\n    return axios.post(API_URL + \"admin/model/delete\", {\n      model_id\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n}\n\nexport default new modelService();","map":{"version":3,"sources":["G:/harrjNew/src/services/adminModel.service.js"],"names":["axios","authHeader","API_URL","process","env","REACT_APP_API_URL","modelService","ModelAdd","category_id","brand_id","model_name","model_desc","insertData","FormData","set","sub_category_id","post","then","response","data","ModelList","get","ModelInfo","model_id","ModelUpdate","updateData","ModelDelete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,QAAQ,CAACC,WAAD,EAAaC,QAAb,EAAsBC,UAAtB,EAAiCC,UAAjC,EAA6C;AACnD,UAAMC,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,GAAX,CAAe,aAAf,EAA8BN,WAA9B;AACAI,IAAAA,UAAU,CAACE,GAAX,CAAe,iBAAf,EAAkCC,eAAlC;AACAH,IAAAA,UAAU,CAACE,GAAX,CAAe,UAAf,EAA2BL,QAA3B;AACAG,IAAAA,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BJ,UAA7B;AACAE,IAAAA,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BH,UAA7B;AAEA,WAAOX,KAAK,CACTgB,IADI,CACCd,OAAO,GAAG,iBADX,EAC8BU,UAD9B,EAEJK,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDC,EAAAA,SAAS,GAAG;AACV,WAAOpB,KAAK,CACTqB,GADI,CACAnB,OAAO,GAAG,kBADV,EAEJe,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDG,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,WAAOvB,KAAK,CACTgB,IADI,CACCd,OAAO,GAAG,qBADX,EACkC;AAAEqB,MAAAA;AAAF,KADlC,EAEJN,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDK,EAAAA,WAAW,CAACD,QAAD,EAAUf,WAAV,EAAsBC,QAAtB,EAAgCC,UAAhC,EAA2CC,UAA3C,EAAuD;AAChE,UAAMc,UAAU,GAAG,IAAIZ,QAAJ,EAAnB;AACAY,IAAAA,UAAU,CAACX,GAAX,CAAe,UAAf,EAA2BS,QAA3B;AACAE,IAAAA,UAAU,CAACX,GAAX,CAAe,aAAf,EAA8BN,WAA9B;AACAiB,IAAAA,UAAU,CAACX,GAAX,CAAe,UAAf,EAA2BL,QAA3B;AACAgB,IAAAA,UAAU,CAACX,GAAX,CAAe,YAAf,EAA6BJ,UAA7B;AACAe,IAAAA,UAAU,CAACX,GAAX,CAAe,YAAf,EAA6BH,UAA7B;AAEA,WAAOX,KAAK,CACTgB,IADI,CACCd,OAAO,GAAG,oBADX,EACiCuB,UADjC,EAEJR,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDO,EAAAA,WAAW,CAACH,QAAD,EAAW;AACpB,WAAOvB,KAAK,CACTgB,IADI,CACCd,OAAO,GAAG,oBADX,EACiC;AAAEqB,MAAAA;AAAF,KADjC,EAEJN,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AArDgB;;AAwDnB,eAAe,IAAIb,YAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass modelService {\r\n  ModelAdd(category_id,brand_id,model_name,model_desc) {\r\n    const insertData = new FormData();\r\n    insertData.set('category_id', category_id);\r\n    insertData.set('sub_category_id', sub_category_id);\r\n    insertData.set('brand_id', brand_id);\r\n    insertData.set('model_name', model_name);\r\n    insertData.set('model_desc', model_desc);\r\n\r\n    return axios\r\n      .post(API_URL + \"admin/model/add\", insertData )\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  ModelList() {\r\n    return axios\r\n      .get(API_URL + \"admin/model/list\")\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  ModelInfo(model_id) {\r\n    return axios\r\n      .post(API_URL + \"admin/model/getinfo\", { model_id })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  ModelUpdate(model_id,category_id,brand_id, model_name,model_desc) {\r\n    const updateData = new FormData();\r\n    updateData.set('model_id', model_id);\r\n    updateData.set('category_id', category_id);\r\n    updateData.set('brand_id', brand_id);\r\n    updateData.set('model_name', model_name);\r\n    updateData.set('model_desc', model_desc);\r\n\r\n    return axios\r\n      .post(API_URL + \"admin/model/update\", updateData )\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  }\r\n  \r\n  ModelDelete(model_id) {\r\n    return axios\r\n      .post(API_URL + \"admin/model/delete\", { model_id })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new modelService();"]},"metadata":{},"sourceType":"module"}