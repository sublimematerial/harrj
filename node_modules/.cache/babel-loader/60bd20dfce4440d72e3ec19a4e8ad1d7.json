{"ast":null,"code":"var _jsxFileName = \"D:\\\\harrjNew\\\\src\\\\components\\\\website\\\\Imageslider.js\";\nimport React, { Component } from \"react\"; // import \"../slider/slider.css\";\n\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport LightBox, { Modal, ModalGateway } from \"react-images\";\nconst responsive = {\n  superLargeDesktop: {\n    breakpoint: {\n      max: 4000,\n      min: 3000\n    },\n    items: 1\n  },\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\n\nclass Slider extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      awsApiData: [],\n      loading: false,\n      lightboxIsOpen: false,\n      // selectedIndex: 0,\n      selectedImage: {}\n    };\n\n    this.toggleLightbox = (post, selectedIndex) => {\n      // this.setState(state => ({\n      //   lightboxIsOpen: !state.lightboxIsOpen,\n      //   selectedIndex\n      // }));\n      this.setState(state => ({\n        lightboxIsOpen: !state.lightboxIsOpen,\n        selectedImage: {\n          author: post.author,\n          index: selectedIndex\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    console.log(\"app mounted\");\n    this.setState({\n      loading: true\n    });\n    /*global fetch */\n    // fetch(\"https://onelbip0e6.execute-api.eu-west-2.amazonaws.com/xxxxx\")\n\n    fetch(\"https://picsum.photos/v2/list?page=1&limit=10\").then(data => data.json()).then(data => // this.setState({ awsApiData: data[0], loading: false }, () =>\n    this.setState({\n      // awsApiData: data.map(item => ({source: item.download_url })),\n      awsApiData: data.map(item => ({ ...item,\n        source: item.download_url\n      })),\n      loading: false\n    }, () => console.log(data)));\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Carousel, {\n      additionalTransfrom: 0,\n      showDots: false,\n      arrows: true,\n      autoPlaySpeed: 3000,\n      autoPlay: true,\n      centerMode: false,\n      className: \"slider\",\n      containerClass: \"container-with-dots\",\n      dotListClass: \"dots\",\n      draggable: true,\n      focusOnSelect: false,\n      infinite: true,\n      itemClass: \"carousel-top\",\n      keyBoardControl: true,\n      minimumTouchDrag: 80,\n      renderButtonGroupOutside: false,\n      renderDotsOutside: true,\n      responsive: responsive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, Object.values(this.state.awsApiData).map((post, indx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-5\",\n        key: indx // onClick={() => this.toggleLightbox(indx)}\n        ,\n        onClick: () => this.toggleLightbox(post, indx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"media-img card-img-top card-img-hero\",\n        src: post.download_url,\n        alt: \"Alt text\",\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }));\n    }))));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["D:/harrjNew/src/components/website/Imageslider.js"],"names":["React","Component","Carousel","LightBox","Modal","ModalGateway","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","Slider","_isMounted","state","awsApiData","loading","lightboxIsOpen","selectedImage","toggleLightbox","post","selectedIndex","setState","author","index","componentDidMount","console","log","fetch","then","data","json","map","item","source","download_url","componentWillUnmount","render","Object","values","indx","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import \"../slider/slider.css\";\r\n\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport LightBox, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst responsive = {\r\n  superLargeDesktop: {\r\n    breakpoint: { max: 4000, min: 3000 },\r\n    items: 1\r\n  },\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 1\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 1\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 1\r\n  }\r\n};\r\n\r\nclass Slider extends Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    awsApiData: [],\r\n    loading: false,\r\n    lightboxIsOpen: false,\r\n    // selectedIndex: 0,\r\n    selectedImage: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    console.log(\"app mounted\");\r\n    this.setState({ loading: true });\r\n    /*global fetch */\r\n    // fetch(\"https://onelbip0e6.execute-api.eu-west-2.amazonaws.com/xxxxx\")\r\n    fetch(\"https://picsum.photos/v2/list?page=1&limit=10\")\r\n      .then((data) => data.json())\r\n      .then((data) =>\r\n        // this.setState({ awsApiData: data[0], loading: false }, () =>\r\n        this.setState(\r\n          {\r\n            // awsApiData: data.map(item => ({source: item.download_url })),\r\n            awsApiData: data.map((item) => ({\r\n              ...item,\r\n              source: item.download_url\r\n            })),\r\n            loading: false\r\n          },\r\n          () => console.log(data)\r\n        )\r\n      );\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  toggleLightbox = (post, selectedIndex) => {\r\n    // this.setState(state => ({\r\n    //   lightboxIsOpen: !state.lightboxIsOpen,\r\n    //   selectedIndex\r\n    // }));\r\n    this.setState((state) => ({\r\n      lightboxIsOpen: !state.lightboxIsOpen,\r\n      selectedImage: { author: post.author, index: selectedIndex }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <>\r\n          <Carousel\r\n            additionalTransfrom={0}\r\n            showDots={false}\r\n            arrows={true}\r\n            autoPlaySpeed={3000}\r\n            autoPlay={true}\r\n            centerMode={false}\r\n            className=\"slider\"\r\n            containerClass=\"container-with-dots\"\r\n            dotListClass=\"dots\"\r\n            draggable\r\n            focusOnSelect={false}\r\n            infinite\r\n            itemClass=\"carousel-top\"\r\n            keyBoardControl\r\n            minimumTouchDrag={80}\r\n            renderButtonGroupOutside={false}\r\n            renderDotsOutside\r\n            responsive={responsive}\r\n          >\r\n            {Object.values(this.state.awsApiData).map((post, indx) => {\r\n              return (\r\n                <div\r\n                  className=\"mt-5\"\r\n                  key={indx}\r\n                  // onClick={() => this.toggleLightbox(indx)}\r\n                  onClick={() => this.toggleLightbox(post, indx)}\r\n                >\r\n                  <img\r\n                    className=\"media-img card-img-top card-img-hero\"\r\n                    src={post.download_url}\r\n                    alt=\"Alt text\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}