{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n/*import * as globalSettings from './../globalSettings';\n\nconst API_URL = globalSettings.API_URL;*/\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass cityService {\n  CityAdd(city_name, country_id, state_id) {\n    var user_id = 1;\n    const insertData = new FormData();\n    insertData.set('city_name', city_name);\n    insertData.set('country_id', country_id);\n    insertData.set('state_id', state_id);\n    return axios.post(API_URL + \"admin/city/add\", insertData).then(response => {\n      return response.data;\n    });\n  }\n\n  CityList() {\n    return axios.get(API_URL + \"admin/city/list\").then(response => {\n      return response.data;\n    });\n  }\n\n  CityInfo(city_id) {\n    return axios.post(API_URL + \"admin/city/getinfo\", {\n      city_id\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  CityUpdate(city_id, city_name, country_id, state_id) {\n    var user_id = 1;\n    const updateData = new FormData();\n    updateData.set('city_name', city_name);\n    updateData.set('country_id', country_id);\n    updateData.set('city_id', city_id);\n    return axios.post(API_URL + \"admin/city/update\", updateData).then(response => {\n      return response.data;\n    });\n  }\n\n  CityDelete(city_id) {\n    var user_id = 1;\n    return axios.post(API_URL + \"admin/city/delete\", {\n      user_id,\n      city_id\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  CityListById(state_id) {\n    var user_id = 1;\n    return axios.post(API_URL + \"admin/city/bystateid\", {\n      state_id\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n}\n\nexport default new cityService();","map":{"version":3,"sources":["D:/harrjNew/src/services/adminCity.service.js"],"names":["axios","authHeader","API_URL","process","env","REACT_APP_API_URL","cityService","CityAdd","city_name","country_id","state_id","user_id","insertData","FormData","set","post","then","response","data","CityList","get","CityInfo","city_id","CityUpdate","updateData","CityDelete","CityListById"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,OAAO,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAEvC,QAAIC,OAAO,GAAG,CAAd;AAEA,UAAMC,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,GAAX,CAAe,WAAf,EAA4BN,SAA5B;AACAI,IAAAA,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BL,UAA7B;AACAG,IAAAA,UAAU,CAACE,GAAX,CAAe,UAAf,EAA2BJ,QAA3B;AAEA,WAAOV,KAAK,CACTe,IADI,CACCb,OAAO,GAAG,gBADX,EAC6BU,UAD7B,EAEJI,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDC,EAAAA,QAAQ,GAAG;AAET,WAAOnB,KAAK,CACToB,GADI,CACAlB,OAAO,GAAG,iBADV,EAEJc,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDG,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAEhB,WAAOtB,KAAK,CACTe,IADI,CACCb,OAAO,GAAG,oBADX,EACiC;AAAEoB,MAAAA;AAAF,KADjC,EAEJN,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDK,EAAAA,UAAU,CAACD,OAAD,EAAUd,SAAV,EAAqBC,UAArB,EAAiCC,QAAjC,EAA2C;AAEnD,QAAIC,OAAO,GAAG,CAAd;AAEA,UAAMa,UAAU,GAAG,IAAIX,QAAJ,EAAnB;AACAW,IAAAA,UAAU,CAACV,GAAX,CAAe,WAAf,EAA4BN,SAA5B;AACAgB,IAAAA,UAAU,CAACV,GAAX,CAAe,YAAf,EAA6BL,UAA7B;AACAe,IAAAA,UAAU,CAACV,GAAX,CAAe,SAAf,EAA0BQ,OAA1B;AAEA,WAAOtB,KAAK,CACTe,IADI,CACCb,OAAO,GAAG,mBADX,EACgCsB,UADhC,EAEJR,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDO,EAAAA,UAAU,CAACH,OAAD,EAAU;AAElB,QAAIX,OAAO,GAAG,CAAd;AAEA,WAAOX,KAAK,CACTe,IADI,CACCb,OAAO,GAAG,mBADX,EACgC;AAAES,MAAAA,OAAF;AAAWW,MAAAA;AAAX,KADhC,EAEJN,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAEDQ,EAAAA,YAAY,CAAChB,QAAD,EAAW;AAErB,QAAIC,OAAO,GAAG,CAAd;AAEA,WAAOX,KAAK,CACTe,IADI,CACCb,OAAO,GAAG,sBADX,EACmC;AAAEQ,MAAAA;AAAF,KADnC,EAEJM,IAFI,CAEEC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAJI,CAAP;AAKD;;AAvEe;;AA0ElB,eAAe,IAAIZ,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\n/*import * as globalSettings from './../globalSettings';\n\nconst API_URL = globalSettings.API_URL;*/\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass cityService {\n  CityAdd(city_name, country_id, state_id) {\n\n    var user_id = 1;\n\n    const insertData = new FormData();\n    insertData.set('city_name', city_name);\n    insertData.set('country_id', country_id);\n    insertData.set('state_id', state_id);\n\n    return axios\n      .post(API_URL + \"admin/city/add\", insertData )\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  CityList() {\n\n    return axios\n      .get(API_URL + \"admin/city/list\")\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  CityInfo(city_id) {\n\n    return axios\n      .post(API_URL + \"admin/city/getinfo\", { city_id })\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  CityUpdate(city_id, city_name, country_id, state_id) {\n\n    var user_id = 1;\n\n    const updateData = new FormData();\n    updateData.set('city_name', city_name);\n    updateData.set('country_id', country_id);\n    updateData.set('city_id', city_id);\n\n    return axios\n      .post(API_URL + \"admin/city/update\", updateData )\n      .then((response) => {\n        return response.data;\n      });\n  }\n  \n  CityDelete(city_id) {\n\n    var user_id = 1;\n\n    return axios\n      .post(API_URL + \"admin/city/delete\", { user_id, city_id })\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  CityListById(state_id) {\n\n    var user_id = 1;\n\n    return axios\n      .post(API_URL + \"admin/city/bystateid\", { state_id })\n      .then((response) => {\n        return response.data;\n      });\n  }\n}\n\nexport default new cityService();"]},"metadata":{},"sourceType":"module"}